ext_if="em0"
wifi_if="urtwn0"
set loginterface pflog0
set block-policy drop
antispoof quick log for $ext_if inet
set skip on lo

# Total available bandwidth is 5M. mofos will be rate limited to 1K
queue root_q on { $ext_if $wifi_if } bandwidth 5M
queue default_q parent root_q bandwidth 5M default
queue mofos_q parent root_q bandwidth 1K

table <white> persist file "/etc/pf.white"
table <mofos> persist file "/etc/pf.mofos"
table <webmofos> persist file "/etc/pf.webmofos"
table <adhosts> persist file "/etc/pf.adhosts" # From http://pgl.yoyo.org/adservers/
table <badhosts> persist file "/etc/pf.badhosts" # From https://lists.blocklist.de/lists/all.txt
#table <good_zones> persist file "/etc/pf.good.zones"
#table <bad_zones> persist file "/etc/pf.bad.zones"

#scrub packets
match in all scrub (no-df random-id)

#pass in log on $ext_if inet proto tcp from any port http rdr-to 192.168.1.18 port https

#general pass
pass

#block packets we don't know about
block quick log inet proto tcp flags A/A
block quick log inet proto tcp flags F/F
block quick log inet proto tcp flags R/R

#general blocks
block quick log from <badhosts>
block quick log from <adhosts>

#pass in log on $ext_if inet proto tcp from any port http rdr-to 192.168.1.18 port https

#pass all hosts to known ports but make sure they don't overdo it
pass in on { $ext_if $wifi_if } inet proto tcp from any \
	flags S/SA keep state \
		 (max-src-conn 50, max-src-conn-rate 15/5, overload <mofos> flush global )

#pass mofos but slow them down
match in on $ext_if inet proto tcp from <mofos> set queue mofos_q 
match in on $ext_if inet proto tcp from <webmofos> set queue mofos_q 
